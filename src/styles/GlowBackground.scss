@use 'sass:math';

.o-glow-background {
  &__particle-container {
    position: absolute;
    transform: translateY(-10vh);
    animation-iteration-count: infinite;
    animation-timing-function: ease-in-out;
  }

  &__particle {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    animation:
      fade-frames 750ms infinite,
      scale-frames 2s infinite;

    @keyframes fade-frames {
      0% {
        opacity: 1;
      }

      50% {
        opacity: 0.7;
      }

      100% {
        opacity: 1;
      }
    }

    @keyframes scale-frames {
      0% {
        transform: scale3d(0.4, 0.4, 1);
      }

      50% {
        transform: scale3d(2.2, 2.2, 1);
      }

      100% {
        transform: scale3d(0.4, 0.4, 1);
      }
    }
  }

  $particleNum: 100;
  $particleBaseSize: 8;

  @for $i from 1 through $particleNum {
    &__particle-container--#{$i} {
      $circleSize: random($particleBaseSize);
      width: $circleSize + px;
      height: $circleSize + px;

      $startPositionYOffset: random(50) + px;
      $startPositionY: calc(100vh + $startPositionYOffset);
      $framesName: 'move-frames-' + $i;
      $moveDuration: 28000 + random(9000) + ms;

      animation-name: #{$framesName};
      animation-duration: $moveDuration;
      animation-delay: random(37000) + ms;

      @keyframes #{$framesName} {
        from {
          transform: translate3d(random(100) + vw, $startPositionY, 0);
        }

        to {
          transform: translate3d(random(100) + vw, -$startPositionYOffset, 0);
        }
      }
    }

    &__particle--#{$i} {
      $particleColor: hsl(
        random(270) + 90,
        100%,
        percentage(math.div(random(30) + 50, 100))
      );
      background-image: radial-gradient(
        $particleColor,
        $particleColor 10%,
        transparent 56%
      );
      animation-delay: random(4000) + ms;
    }
  }
}
